[build-system]
requires = ["setuptools>=61.2", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fontlab_export_tools"
description = "CLI tools and Python library to automate exporting from FontLab"
authors = [{ name = "Adam Twardoch", email = "adam+github@twardoch.com" }]
license = { text = "Apache-2.0" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
]
requires-python = ">=3.9"
dependencies = [
    "attrdict3 >=2.0.2",
    "defcon >=0.10.2",
    "fire >=0.5.0",
    "fontTools >=4.39.2",
    "GitPython >=3.1.31",
    "importlib_metadata >=6.0.0",
    "PyYAML >=6.0",
    "setuptools >=67.2.0",
    "ufoLib2 >=0.14.0",
    "ufo-extractor >=0.6.0",
    "fontFeatures >=1.7.4",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"
# Add here related links, for example:

[project.urls]
Homepage = "https://github.com/fontlaborg/fontlab-export-tools"
# Source = https://github.com/pyscaffold/pyscaffold/
# Changelog = https://pyscaffold.org/en/latest/changelog.html
# Tracker = https://github.com/pyscaffold/pyscaffold/issues
# Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
# Download = https://pypi.org/project/PyScaffold/#files
# Twitter = https://twitter.com/PyScaffold
# Change if running only on Windows, Mac or Linux (comma-separated)
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/

[project.optional-dependencies]
# Add here additional requirements for extra features, to install with:
# `pip install fontlab_export_tools[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing = ["setuptools", "pytest", "pytest-cov"]

[project.scripts]
# Add here console scripts like:
fontlabexp = "fontlab_export_tools.__main__:main"
# For example:
# console_scripts =
# fibonacci = fontlab_export_tools.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
# awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool.setuptools]
zip-safe = false
include-package-data = true
package-dir = { "" = "src" }
# Require a min/specific Python version (comma-separated conditions)
# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
platforms = ["any"]
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]
namespaces = true

[tool.pytest.ini_options]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
# Comment those flags to avoid this pytest issue.
addopts = """
--cov fontlab_export_tools --cov-report term-missing
--verbose"""
norecursedirs = ["dist", "build", ".tox"]
testpaths = ["tests"]
# Use pytest markers to select/deselect specific tests
# markers =
# slow: mark tests as slow (deselect with '-m "not slow"')
# system: mark end-to-end system tests

[tool.devpi.upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = "1"
formats = "bdist_wheel"

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = "88"
extend_ignore = "E203, W503"
# ^  Black-compatible
# E203 and W503 have edge cases handled by black
exclude = """
.tox
build
dist
.eggs
docs/conf.py"""

[tool.pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = "4.4"
package = "fontlab_export_tools"
extensions = """
github_actions
markdown
pre_commit"""
# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html
